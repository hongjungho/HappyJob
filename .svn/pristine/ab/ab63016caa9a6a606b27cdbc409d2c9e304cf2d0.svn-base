package spring.com.sample.web;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.crypto.codec.Base64;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

import com.nexacro.xapi.data.PlatformData;
import com.nexacro.xapi.data.VariableList;

import egovframework.rte.fdl.cryptography.EgovCryptoService;
import egovframework.rte.fdl.cryptography.EgovPasswordEncoder;
import egovframework.rte.fdl.cryptography.impl.EgovARIACryptoServiceImpl;
import spring.com.sample.service.HappyLibraryService;
import spring.nexacro.annotation.ParamDataSet;
import spring.nexacro.data.NexacroResult;

@Controller
public class HappyLibraryController {

	private Logger log = LoggerFactory.getLogger(HappyLibraryController.class);
	
	@Resource(name ="happyLibraryService")
	private HappyLibraryService happyLibraryService;
	
	//사용자 정보조회----------------------------------------------------------------------------------------------------------
	@RequestMapping(value = "/practice/selectMypageList.do")
	 public NexacroResult selectMypageList(@ParamDataSet(name = "dsMypageMap", required = false) Map<String, Object> dsMypageMap) throws Exception {

			// 넥사크로로 전달 해줄 객체
			NexacroResult result = new NexacroResult();
  

			log.debug("eee");
			
			

			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			List<Map<String,Object>> dsUserInfo = happyLibraryService.selectMypageList(dsMypageMap);

			result.addDataSet("dsUserInfo", dsUserInfo);
			System.out.println(dsUserInfo.get(0).get("userNo"));
			
			return result;
	}
	
	
	
	
	
	
	//사용자 정보수정-----------------------------------------------------------------------------------------------------------
	@RequestMapping(value = "/practice/saveUserInfo.do")
	public NexacroResult saveUserInfo(@ParamDataSet(name = "dsUserInfo", required = false) List<Map<String, Object>> egovdsList)throws Exception{
		
		System.out.println("savecontroller");
		System.out.println("savecontroller");
		System.out.println("savecontroller");
		System.out.println("savecontroller");
		System.out.println("savecontroller");
		
		NexacroResult result = new NexacroResult();
	    
		// 결과에 대한 콜백 메세지 처리 시 사용되는 객체
		PlatformData resData = new PlatformData();
		VariableList resVarList = resData.getVariableList();
		
		happyLibraryService.saveUserInfo(egovdsList);
		
	

		resVarList.add("ErrorCode", 200);
		//resVarList.add("ErrorMsg", msg);


		resData.setVariableList(resVarList);
		result.setPlatformData(resData);

		return result;
	} 
	
	
	
	
	//사용자 대출조회-----------------------------------------------------------------------------------------------------------
	
	@RequestMapping(value = "/practice/selectBorrowList.do")
	 public NexacroResult selectBorrowList(@ParamDataSet(name = "dsBrSchMap", required = false) Map<String, Object> dsBrSchMap) throws Exception {

			// 넥사크로로 전달 해줄 객체
			NexacroResult result = new NexacroResult();
 

			log.debug("eee");
			
			

			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			System.out.println("selectcontroller");
			List<Map<String,Object>> dsUserBr = happyLibraryService.selectBorrowList(dsBrSchMap);

			result.addDataSet("dsUserBr", dsUserBr);
			
			return result;
	}
	
	
	
	
	
	
	
}
